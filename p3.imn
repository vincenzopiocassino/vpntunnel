node n2 {
    type router
    model PC
    network-config {
	hostname C1
	!
	interface eth0
	 ipv6 address 2001::33/64
	!
    }
    canvas c1
    iconcoords {85.0 120.0}
    labelcoords {87.0 98.0}
    interface-peer {eth0 n4}
    custom-config {
	custom-config-id service:DefaultRoute
	custom-command DefaultRoute
	config {
	files=('defaultroute.sh', )
	}
    }
    custom-config {
	custom-config-id service:DefaultRoute:defaultroute.sh
	custom-command defaultroute.sh
	config {
	#!/bin/sh
	# auto-generated by DefaultRoute service (utility.py)
	ip route add default via 2001::1
	}
    }
    services {DefaultRoute}
}

node n3 {
    type router
    model PC
    network-config {
	hostname C2
	!
	interface eth0
	 ipv6 address 2002::33/64
	!
    }
    canvas c1
    iconcoords {926.0 123.0}
    labelcoords {929.0 101.0}
    interface-peer {eth0 n5}
}

node n4 {
    type router
    model router
    network-config {
	hostname GW1
	!
	interface eth0
	 ipv6 address 2001::1/64
	!
	interface eth1
	 ip address 10.0.0.1/24
	!
    }
    canvas c1
    iconcoords {174.33333333333326 228.0}
    labelcoords {174.33333333333326 260.0}
    interface-peer {eth0 n2}
    services {vtysh IPForward DefaultRoute}
    interface-peer {eth1 n1}
    custom-config {
	custom-config-id service:DefaultRoute
	custom-command DefaultRoute
	config {
	files=('defaultroute.sh', )
	}
    }
    custom-config {
	custom-config-id service:DefaultRoute:defaultroute.sh
	custom-command defaultroute.sh
	config {
	#!/bin/sh
	# auto-generated by DefaultRoute service (utility.py)
	ip route add default via 2001::1
	ip route add default via 10.0.0.2
	
	}
    }
}

node n5 {
    type router
    model router
    network-config {
	hostname GW2
	!
	interface eth1
	 ipv6 address 2002::1/64
	!
	interface eth0
	 ip address 10.0.3.2/24
	!
    }
    canvas c1
    iconcoords {844.0 227.0}
    labelcoords {844.0 259.0}
    interface-peer {eth1 n3}
    services {vtysh IPForward DefaultRoute}
    interface-peer {eth0 n7}
}

node n1 {
    type router
    model router
    network-config {
	hostname ISP1
	!
	interface eth1
	 ip address 10.0.1.1/24
	!
	interface eth0
	 ip address 10.0.0.2/24
	!
    }
    canvas c1
    iconcoords {251.0 341.0}
    labelcoords {251.0 373.0}
    interface-peer {eth0 n4}
    interface-peer {eth1 n6}
    services {zebra RIP vtysh IPForward DefaultRoute}
    custom-config {
	custom-config-id service:DefaultRoute
	custom-command DefaultRoute
	config {
	files=('defaultroute.sh', )
	}
    }
    custom-config {
	custom-config-id service:DefaultRoute:defaultroute.sh
	custom-command defaultroute.sh
	config {
	#!/bin/sh
	# auto-generated by DefaultRoute service (utility.py)
	ip route add default via 10.0.0.1
	ip route add default via 10.0.1.2
	
	}
    }
}

node n6 {
    type router
    model router
    network-config {
	hostname ISP2
	!
	interface eth1
	 ip address 10.0.2.1/24
	!
	interface eth0
	 ip address 10.0.1.2/24
	!
    }
    canvas c1
    iconcoords {517.0 342.0}
    labelcoords {517.0 374.0}
    interface-peer {eth0 n1}
    interface-peer {eth1 n7}
    services {zebra RIP vtysh IPForward DefaultRoute}
    custom-config {
	custom-config-id service:DefaultRoute
	custom-command DefaultRoute
	config {
	files=('defaultroute.sh', )
	}
    }
    custom-config {
	custom-config-id service:DefaultRoute:defaultroute.sh
	custom-command defaultroute.sh
	config {
	#!/bin/sh
	# auto-generated by DefaultRoute service (utility.py)
	ip route add default via 10.0.1.1
	ip route add default via 10.0.2.2
	
	}
    }
}

node n7 {
    type router
    model router
    network-config {
	hostname ISP3
	!
	interface eth1
	 ip address 10.0.3.1/24
	!
	interface eth0
	 ip address 10.0.2.2/24
	!
    }
    canvas c1
    iconcoords {776.0 342.0}
    labelcoords {776.0 374.0}
    interface-peer {eth0 n6}
    interface-peer {eth1 n5}
    services {zebra RIP vtysh IPForward DefaultRoute}
    custom-config {
	custom-config-id service:DefaultRoute
	custom-command DefaultRoute
	config {
	files=('defaultroute.sh', )
	}
    }
    custom-config {
	custom-config-id service:DefaultRoute:defaultroute.sh
	custom-command defaultroute.sh
	config {
	#!/bin/sh
	# auto-generated by DefaultRoute service (utility.py)
	ip route add default via 10.0.2.1
	ip route add default via 10.0.3.2
	
	}
    }
}

link l1 {
    nodes {n2 n4}
    bandwidth 0
}

link l3 {
    nodes {n5 n3}
    bandwidth 0
}

link l2 {
    nodes {n4 n1}
    bandwidth 0
}

link l4 {
    nodes {n1 n6}
    bandwidth 0
}

link l5 {
    nodes {n6 n7}
    bandwidth 0
}

link l6 {
    nodes {n7 n5}
    bandwidth 0
}

annotation a3 {
    iconcoords {419.0 192.0}
    type text
    label {IPv6 over IPv4 tunnel}
    labelcolor #000000
    fontfamily {Arial}
    fontsize {12}
    effects {bold}
    canvas c1
}

annotation a4 {
    type text
    iconcoords {431.0 387.0}
    label {}
    canvas c1
}

annotation a5 {
    type text
    iconcoords {347.0 372.0}
    label {}
    canvas c1
}

annotation a6 {
    type text
    iconcoords {431.0 373.0}
    label {}
    canvas c1
}

annotation a7 {
    type text
    iconcoords {527.0 232.0}
    label {}
    canvas c1
}

annotation a9 {
    iconcoords {58.0 63.0}
    type text
    label {Spain headquarters}
    labelcolor black
    fontfamily {Arial}
    fontsize {12}
    effects {bold}
    canvas c1
}

annotation a10 {
    type text
    iconcoords {103.0 248.0}
    label {}
    canvas c1
}

annotation a12 {
    iconcoords {786.0 70.0}
    type text
    label {England headquarters}
    labelcolor black
    fontfamily {Arial}
    fontsize {12}
    effects {bold}
    canvas c1
}

annotation a1 {
    iconcoords {149 202 849 251}
    type oval
    label {}
    labelcolor black
    fontfamily {Arial}
    fontsize {12}
    color #CFCFFF
    width 0
    border black
    canvas c1
}

annotation a2 {
    iconcoords {20 75 231 274}
    type oval
    label {}
    labelcolor black
    fontfamily {Arial}
    fontsize {12}
    color #ffff00
    width 0
    border black
    canvas c1
}

annotation a8 {
    iconcoords {763 76 974 275}
    type oval
    label {}
    labelcolor black
    fontfamily {Arial}
    fontsize {12}
    color #7effff
    width 0
    border black
    canvas c1
}

annotation a11 {
    iconcoords {167.0 279.0 854.0 407.0}
    type rectangle
    label {}
    labelcolor black
    fontfamily {Arial}
    fontsize {12}
    color #19ff61
    width 0
    border black
    rad 25
    canvas c1
}

annotation a13 {
    iconcoords {490.0 393.0}
    type text
    label {Internet}
    labelcolor black
    fontfamily {Arial}
    fontsize {12}
    effects {bold}
    canvas c1
}

annotation a14 {
    iconcoords {56.0 144.0}
    type text
    label {n2}
    labelcolor #0000ff
    fontfamily {Arial}
    fontsize {12}
    effects {bold}
    canvas c1
}

annotation a15 {
    type text
    iconcoords {123.0 108.0}
    label {}
    canvas c1
}

annotation a16 {
    iconcoords {943.0 142.0}
    type text
    label {n3}
    labelcolor #0000ff
    fontfamily {Arial}
    fontsize {12}
    effects {bold}
    canvas c1
}

annotation a17 {
    iconcoords {129.0 239.0}
    type text
    label {n4}
    labelcolor #0000ff
    fontfamily {Arial}
    fontsize {12}
    effects {bold}
    canvas c1
}

annotation a18 {
    iconcoords {872.0 242.0}
    type text
    label {n5}
    labelcolor #0000ff
    fontfamily {Arial}
    fontsize {12}
    effects {bold}
    canvas c1
}

annotation a19 {
    iconcoords {268.0 364.0}
    type text
    label {n1}
    labelcolor #0000ff
    fontfamily {Arial}
    fontsize {12}
    effects {bold}
    canvas c1
}

annotation a20 {
    iconcoords {536.0 365.0}
    type text
    label {n6}
    labelcolor #0000ff
    fontfamily {Arial}
    fontsize {12}
    effects {bold}
    canvas c1
}

annotation a21 {
    iconcoords {797.0 365.0}
    type text
    label {n2}
    labelcolor #0000ff
    fontfamily {Arial}
    fontsize {12}
    effects {bold}
    canvas c1
}

canvas c1 {
    name {Canvas1}
}

hook 2:configuration_hook.sh {
#!/bin/sh
# session hook script; write commands here to execute on the host at the
# specified state
rm -f /root/.bash_history
rm -f /.bash_history
}

hook 6:shutdown_hook.sh {
#!/bin/sh
# session hook script; write commands here to execute on the host at the
# specified state
rm -f /root/.bash_history
rm -f /.bash_history
}

option global {
    interface_names yes
    ip_addresses yes
    ipv6_addresses yes
    node_labels yes
    link_labels yes
    show_api no
    background_images no
    annotations yes
    grid yes
    traffic_start 0
}

option session {
}

